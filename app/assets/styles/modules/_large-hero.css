/* So "large-hero" is the BLOCK within the BEM philosophy */
.large-hero {
	border-bottom: 10px solid $mainBlue;
	/* CSS Grids for overlapping the text-content on the hero image */
	display: grid;
	grid-template-columns: 1fr;

	/* Any CSS extending the MAIN (BLOCK) class (large-hero) via the "__" (2 underscores) syntax is considered to
	   be BLOCK ELEMENTS within the BEM philosophy */
	
	/* By default browsers treat images as inline level elements - which means it treats it like text, so it wants
	   to leave some room at the bottom for characters that hang below the line (ie. gjp).
	   By saying "block" it treats it as a div or rectangle that can align perfectly */
	&__image {
		grid-column: 1;
		grid-row: 1;
		img {
			display: block;
		}
	}

	/* here the ampersand(&) is a substitute for the main class name (.large-hero) */
	&__text-content {
		align-self: center; /* Needed to get vertical alignment when overlapping the image */
		grid-column: 1;
		grid-row: 1;
		
		padding-top: 88px;
		text-align: center;

		@mixin atMedium {
			padding-top: 60px;
		}
	}

	/* An explanation of REM(rem), when using "rem" everthing is relative to the ROOT of the web page (ie. the html)
		So the browser will take to font size of the html element, and most web browsers will have a default font size
		of about 16 pixels, therefore 1.5rem is equivalent to 24px on most browsers.
		Someone with poor eysight may have configured their browser to have a default size of up to 30px and hence by using
		"rem" this is a relative sizing and hence scale accordingly */
	&__title {
		font-weight: 300;
		color: $mainBlue;
		font-size: 2.4rem;
		margin: 0;

		@mixin atSmall {
			font-size: 4.8rem;
		}

	}

	&__subtitle {
		font-weight: 300;
		color: $mainBlue;
		font-size: 1.5rem;
		margin: 0;

		@mixin atSmall {
			font-size: 2.9rem;
		}
	}

	&__description {
		/* white text #FFF */
		color: #FFF;
		
		font-size: 1.1rem;
		font-weight: 100;
		text-shadow: 2px 2px 0 rgba(0, 0, 0, .1);

		/* max width hee used to have the description break on to 2 lines (at the right place according to the design file) 
		   margin left and right auto keeps it centered */
		max-width: 29.375rem;
		margin-left: auto;
		margin-right: auto;

		@mixin atSmall {
			font-size: 1.875rem;
		}
	}
}

